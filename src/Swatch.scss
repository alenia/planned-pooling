.swatch {
  margin: 5px 0;
  width: fit-content;
  display: flex;
  flex-direction: column-reverse;
  .crow {
    display: flex;
    flex-direction: row;
  }

  .crow:nth-child(2n) {
    flex-direction: row-reverse;
  }
}

.swatch {
  .stitch {
    border: 1px solid black;
    width: 12px;
    height: 20px;
  }
}

.swatch.stacked, .swatch.ripple, .swatch.vstitchCluster {
  .stitch {
    margin: 1px;
  }
}

.swatch.v-stitch {
  .stitch {
    width: 20px;
    height: 20px;
    border: 0;
    clip-path: polygon(0 0, 25% 0, 50% 50%, 75% 0, 100% 0, 50% 100%);
  }
}
.swatch.jasmine {
  $puffSize: 30px;
  .stitch {
    width: $puffSize;
    height: 10px;
    border: 1px solid black;
    border-radius: 40%;
    position: absolute;
  }

  .cluster {
    position: relative;
    width: $puffSize;
    height: $puffSize;
  }
  .crow:nth-child(2n) {
    margin-left: 50px; //this is a weird artifact of the fact that the prepended cluster takes up a ton of room
    .stitch:nth-child(3n), .stitch:only-child {
      transform: rotate(120deg);
      transform-origin: center left;
    }
    .stitch:nth-child(3n+2) {
      transform: rotate(60deg);
      transform-origin: center left;
    }
  }
  .crow:nth-child(2n+1) {
    .stitch:nth-child(3n), .stitch:only-child {
      transform: rotate(-120deg);
      transform-origin: center right;
    }
    .stitch:nth-child(3n+2) {
      transform: rotate(-60deg);
      transform-origin: center right;
    }
  }
}

.swatch.clustered {
  .cluster {
    display: flex;
    flex-direction: row;
  }

  .crow:nth-child(2n) .cluster {
    flex-direction: row-reverse;
  }
}

.swatch.ripple {
  $rot: 20deg;
  .crow:nth-child(2n) .cluster:nth-last-child(2n+1), .crow:nth-child(2n+1) .cluster:nth-child(2n+1) {
    transform: rotate($rot);
    .stitch:first-child {
      transform: rotate(-1 * $rot);
    }
    .stitch:last-child {
      transform: rotate(-1 * $rot);
    }
  }

  .crow:nth-child(2n) .cluster:nth-last-child(2n), .crow:nth-child(2n+1) .cluster:nth-child(2n) {
    transform: rotate(-1 * $rot);
    .stitch:first-child {
      transform: rotate($rot);
    }
    .stitch:last-child {
      transform: rotate($rot);
    }
  }
}

.swatch.shell {
  $stitchWidth: 35px;
  $stitchHeight: 20px;
  $stitchSpacing: 2px;
  .crow:nth-child(2n) {
    margin: 0 0.5*$stitchWidth + $stitchSpacing;
  }
  .stitch {
    width: $stitchWidth;
    height: $stitchHeight;
    margin-left: $stitchSpacing;
    margin-right: $stitchSpacing;
    margin-top: -.37 * $stitchHeight;
    margin-bottom: 0;
    border: 0;
    clip-path: polygon(0 40%, 20% 15%, 50% 0, 80% 15%, 100% 40%, 50% 100%);
  }
}

$basicStitchHeight: 28px;
.swatch.moss, .swatch.hdc {
  $stitchHeight: $basicStitchHeight;
  $stitchWidth: 14px;
  $spacing: 1px;
  .crow:nth-child(2n) {
    margin: 0 $stitchWidth + $spacing;
  }
  .stitch {
    box-sizing: border-box;
    border: 1px solid black;
    width: $stitchWidth;
    height: $stitchHeight;
    margin-left: $stitchWidth + $spacing;
    margin-right: $spacing;
    margin-top: $spacing;
  }
}

.swatch.moss .stitch {
  margin-bottom: -0.5*$basicStitchHeight;
}

.swatch.hdc .stitch {
  margin-bottom: -.3*$basicStitchHeight;
}

.swatch.granny {
  $stitchHeight: 20px;
  .crow:nth-child(2n) {
    margin: 0 $stitchHeight;
  }
  .stitch {
    box-sizing: border-box;
    border: 1px solid black;
    height: $stitchHeight;
    width: $stitchHeight;
    margin: 0 $stitchHeight -.2*$stitchHeight 0;
  }
}

.vstitchCluster {
  $rot: 30deg;
  .cluster .stitch:first-child, .crow:nth-child(2n) .cluster .stitch:last-child {
    transform: rotate(-1* $rot);
  }
  .cluster .stitch:last-child, .crow:nth-child(2n) .cluster .stitch:first-child {
    transform: rotate($rot);
  }
  .cluster .stitch:only-child {
    transform: rotate(0) !important;
  }
}

.ablockCluster {
  $clusterHeight: 45px;
  $rot: 45deg;

  .stitch {
    height: auto;
    width: auto;
    flex-grow: 1;
  }
  .crow:nth-child(2n) {
    margin: -.3 * $clusterHeight 0 -.3 * $clusterHeight .7 * $clusterHeight;
    .cluster {
      transform: rotate(-1 * $rot);
    }
  }
  .cluster {
    height: $clusterHeight;
    width: $clusterHeight;
    margin: 0 .4 * $clusterHeight 0 0;
    transform: rotate($rot);
  }
}
.overlapping-container {
  display: flex;
  flex-direction: column-reverse;
  .ablockCluster {
    $clusterHeight: 45px;
    margin-bottom: -24px;
    .crow:nth-child(2n) {
      margin: -.42 * $clusterHeight 0 -.42 * $clusterHeight .82 * $clusterHeight;
    }
    &.mirrored {
      transform: rotateY(180deg) ;
      margin-left: -18px;
    }
  }
}


